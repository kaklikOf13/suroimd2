import { AKeyFrame } from "../../engine/definitions.ts";
import { v2, Vec2 } from "../../engine/geometry.ts";
import { Definitions,Definition } from "../../engine/mod.ts"
import { DefaultFistRig, ItemQuality } from "../../others/item.ts";
import { BoostType } from "../player/boosts.ts";
import { GameItem, InventoryItemType } from "../utils.ts";

export enum ConsumibleCondition{
    UnfullHealth,
    UnfullExtra
}
export const ConsumiblesAnimations={
    drinking:(frame:string="soda",time:number=2,hotspot?:Vec2)=>[
        {
            actions:[
                {
                    type:"sprite",
                    fuser:"weapon",
                    image:frame,
                    visible:true,
                    scale:1.1,
                    rotation:-0.2,
                    hotspot:hotspot??v2.new(0.5,.5),
                    zIndex:6,
                    position:DefaultFistRig.right!.position
                },
                {
                    ...DefaultFistRig.left!,
                    visible:true,
                    type:"sprite",
                    fuser:"left_arm",
                },
                {
                    ...DefaultFistRig.right!,
                    visible:true,   
                    type:"sprite",
                    fuser:"right_arm",
                },
            ],
            time:0
        },
        {
            actions:[
                {
                    type:"tween",
                    fuser:"weapon",
                    to:{
                        rotation:-1.570796,
                        position:v2.new(.46,0)
                    }
                },
                {
                    type:"tween",
                    fuser:"right_arm",
                    to:{
                        rotation:DefaultFistRig.right!.rotation-0.4,
                        position:v2.new(DefaultFistRig.right!.position.x,DefaultFistRig.right!.position.y-0.2)
                    }
                }
            ],
            time:0.5
        }
    ]
}satisfies Record<string,()=>AKeyFrame[]>
export interface ConsumibleDef extends Definition{
    health?:number
    boost?:number
    boost_type?:BoostType
    max_heal?:number
    max_boost?:number
    quality:ItemQuality
    use_delay:number
    condition?:ConsumibleCondition[]
    parachute?:number
    frame?:{
        using_particle:string
    }
    sounds?:{
        using?:string
    }
    drink?:boolean
    animation?:AKeyFrame[]
}
export const Consumibles=new Definitions<ConsumibleDef,GameItem>((i)=>{
    i.item_type=InventoryItemType.consumible
})
Consumibles.insert(
    {
        idString:"gauze",
        health:15,
        max_heal:0.75,
        use_delay:3,
        quality:ItemQuality.Uncommon,
        condition:[ConsumibleCondition.UnfullHealth],
        frame:{
            using_particle:"healing_particle"
        }
    },
    {
        idString:"medikit",
        health:100,
        use_delay:5.5,
        quality:ItemQuality.Uncommon,
        condition:[ConsumibleCondition.UnfullHealth]
    },

    //Adrenaline
    {
        idString:"soda",
        boost:25,
        use_delay:2.5,
        boost_type:BoostType.Adrenaline,
        quality:ItemQuality.Uncommon,
        condition:[ConsumibleCondition.UnfullExtra],
        animation:ConsumiblesAnimations.drinking("soda",2.5),
        drink:true
    },
    {
        idString:"inhaler",
        boost:50,
        use_delay:4.5,
        boost_type:BoostType.Adrenaline,
        quality:ItemQuality.Uncommon,
        condition:[ConsumibleCondition.UnfullExtra],
    },
    {
        idString:"yellow_pills",
        boost:100,
        use_delay:6,
        boost_type:BoostType.Adrenaline,
        quality:ItemQuality.Rare,
        condition:[ConsumibleCondition.UnfullExtra],
    },

    //Shield
    {
        idString:"small_blue_potion",
        boost:25,
        max_boost:0.5,
        use_delay:2.65,
        boost_type:BoostType.Shield,
        quality:ItemQuality.Uncommon,
        condition:[ConsumibleCondition.UnfullExtra],
        sounds:{
            using:"using_small_potion"
        },
        animation:ConsumiblesAnimations.drinking("small_blue_potion",2.65),
        drink:true
    },
    {
        idString:"blue_potion",
        boost:50,
        use_delay:4.5,
        boost_type:BoostType.Shield,
        quality:ItemQuality.Rare,
        condition:[ConsumibleCondition.UnfullExtra],
        sounds:{
            using:"using_potion"
        },
        animation:ConsumiblesAnimations.drinking("blue_potion",4.5,v2.new(0.5,0.35)),
        drink:true
    },
    {
        idString:"blue_pills",
        boost:100,
        use_delay:6,
        boost_type:BoostType.Shield,
        quality:ItemQuality.Epic,
        condition:[ConsumibleCondition.UnfullExtra]
    },
    //Mana
    {
        idString:"small_purple_potion",
        boost:50,
        use_delay:2.6,
        boost_type:BoostType.Mana,
        quality:ItemQuality.Rare,
        condition:[ConsumibleCondition.UnfullExtra],
        sounds:{
            using:"using_small_potion"
        },
        animation:ConsumiblesAnimations.drinking("small_purple_potion",2.6),
        drink:true
    },
    {
        idString:"purple_potion",
        boost:40,
        use_delay:4.5,
        boost_type:BoostType.Mana,
        quality:ItemQuality.Epic,
        condition:[ConsumibleCondition.UnfullExtra],
        sounds:{
            using:"using_potion"
        },
        animation:ConsumiblesAnimations.drinking("purple_potion",4.5,v2.new(0.5,0.35)),
        drink:true
    },
    {
        idString:"purple_pills",
        boost:100,
        use_delay:4.5,
        boost_type:BoostType.Mana,
        quality:ItemQuality.Legendary,
        condition:[ConsumibleCondition.UnfullExtra]
    },
    //Addiction
    {
        idString:"small_red_crystal",
        boost:25,
        use_delay:1.5,
        boost_type:BoostType.Addiction,
        quality:ItemQuality.Epic,
        condition:[ConsumibleCondition.UnfullExtra],
        animation:ConsumiblesAnimations.drinking("small_red_crystal",1.4),
    },
    {
        idString:"red_crystal",
        boost:50,
        use_delay:3,
        boost_type:BoostType.Addiction,
        quality:ItemQuality.Epic,
        condition:[ConsumibleCondition.UnfullExtra],
        animation:ConsumiblesAnimations.drinking("red_crystal",2.9),
    },
    {
        idString:"red_pills",
        boost:100,
        use_delay:4.5,
        boost_type:BoostType.Addiction,
        quality:ItemQuality.Legendary,
        condition:[ConsumibleCondition.UnfullExtra]
    },
    //Misc
    {
        idString:"pocket_portal",
        use_delay:1.5,
        parachute:1,
        quality:ItemQuality.Mythic
    },
)